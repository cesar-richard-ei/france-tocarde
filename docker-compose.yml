services:
  db:
    image: postgres:17-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ft
      POSTGRES_DB: ft
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 2s
      retries: 15
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d/

  backend:
    image: ft-backend
    build:
      context: backend
    environment:
      DJANGO_SECRET_KEY: "+uochl)=pkgm#_8v0d)e&w0+0h9%d-+p)w19my_0^5om%ur#e2"
      FT_DJANGO_DEBUG: "True"
      FT_DJANGO_ALLOWED_HOSTS: "*"
      FT_CSRF_TRUSTED_ORIGINS: "http://localhost:5173,https://jubilant-fortnight-r6wv7jxqv9vhxxq4-5173.app.github.dev"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ft
      POSTGRES_DB: ft
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      FT_LOG_LEVEL: "INFO"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/ft:/code/ft
      - ./backend/.coveragerc:/code/.coveragerc
      - ./backend/pytest.ini:/code/pytest.ini
    depends_on:
      db:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  pgdata:
