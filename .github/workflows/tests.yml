name: Tests CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: arc-runner-set
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ft
          POSTGRES_DB: ft_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Django configuration
        working-directory: ./backend
        env:
          DJANGO_SETTINGS_MODULE: ft.settings
          DJANGO_SECRET_KEY: "test-secret-key-only-for-ci-tests-not-used-in-production"
          FT_DJANGO_DEBUG: "True"
          FT_DJANGO_ALLOWED_HOSTS: "*"
          FT_CSRF_TRUSTED_ORIGINS: "http://localhost"
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ft
          POSTGRES_DB: ft_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          FT_LOG_LEVEL: INFO
        run: |
          python -c "from django.conf import settings; from django.core.management.utils import get_random_secret_key; print(f'Django settings loaded successfully, SECRET_KEY is set: {bool(settings.SECRET_KEY)}'); print(f'Database connection: {settings.DATABASES[\"default\"][\"HOST\"]}:{settings.DATABASES[\"default\"][\"PORT\"]}')"

      - name: Run tests
        working-directory: ./backend
        env:
          DJANGO_SETTINGS_MODULE: ft.settings
          DJANGO_SECRET_KEY: "test-secret-key-only-for-ci-tests-not-used-in-production"
          FT_DJANGO_DEBUG: "True"
          FT_DJANGO_ALLOWED_HOSTS: "*"
          FT_CSRF_TRUSTED_ORIGINS: "http://localhost"
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ft
          POSTGRES_DB: ft_test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          FT_LOG_LEVEL: INFO
        run: |
          python -m pytest -v --cov=ft --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage.xml
          fail_ci_if_error: false
