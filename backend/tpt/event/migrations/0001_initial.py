# Generated by Django 5.2.3 on 2025-06-16 21:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nom de la ressource', max_length=255, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text="Description de l'événement", null=True, verbose_name='Description')),
                ('location', models.CharField(help_text="Lieu de l'événement", max_length=255, verbose_name='Lieu')),
                ('start_date', models.DateTimeField(help_text="Date de début de l'événement", verbose_name='Date de début')),
                ('end_date', models.DateTimeField(help_text="Date de fin de l'événement", verbose_name='Date de fin')),
                ('url_signup', models.URLField(help_text="URL de l'inscription à l'événement", max_length=255, verbose_name="URL de l'inscription")),
                ('url_website', models.URLField(help_text="URL du site web de l'événement", max_length=255, verbose_name='URL du site web')),
                ('prices', models.TextField(blank=True, help_text="Prix de l'événement", null=True, verbose_name='Prix')),
                ('is_active', models.BooleanField(default=True, help_text="Si l'événement est actif (visible sur le site)", verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date de création de la ressource', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date de mise à jour de la ressource', verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['start_date', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='EventSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text="Si l'inscription est valide (visible sur le site)", verbose_name='Actif')),
                ('can_invite', models.BooleanField(default=False, help_text="Si l'utilisateur peut inviter d'autres utilisateurs", verbose_name='Peut inviter')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date de création de la ressource', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date de mise à jour de la ressource', verbose_name='Date de mise à jour')),
                ('event', models.ForeignKey(help_text='Événement', on_delete=django.db.models.deletion.CASCADE, to='event.event', verbose_name='Événement')),
                ('user', models.ForeignKey(help_text='Utilisateur', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['event', 'user'],
                'unique_together': {('event', 'user')},
            },
        ),
    ]
