---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tpt-service-account
  namespace: "{{ .Values.namespace }}"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tpt-ci-account
  namespace: "{{ .Values.namespace }}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tpt-role
  namespace: "{{ .Values.namespace }}"
rules:
  # Droits minimaux pour les pods
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]  # Pour l'auto-discovery et health checks

  # Droits pour les configmaps (nécessaire pour les configs)
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]  # Lecture seule pour les configs

  # Droits pour les secrets (nécessaire pour Infisical)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]  # Lecture seule pour les secrets

  # Droits pour les métriques Prometheus
  - apiGroups: [""]
    resources: ["services/proxy"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tpt-ci-role
  namespace: "{{ .Values.namespace }}"
rules:
  # Ressources de base pour deployment
  - apiGroups: [""]
    resources: ["namespaces", "pods", "services", "configmaps", "secrets", "serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings", "roles"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # PVCs - sans delete pour éviter perte de données
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  # Déploiements et statefulsets - verbes essentiels
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Jobs et CronJobs
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Istio networking
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices", "destinationrules", "gateways"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # PDBs
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Monitoring
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors", "prometheusrules"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Infisical secrets
  - apiGroups: ["secrets.infisical.com"]
    resources: ["infisicalsecrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Istio security - permissions de base
  - apiGroups: ["security.istio.io"]
    resources: ["peerauthentications", "authorizationpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tpt-role-binding
  namespace: "{{ .Values.namespace }}"
subjects:
  - kind: ServiceAccount
    name: tpt-service-account
    namespace: "{{ .Values.namespace }}"
roleRef:
  kind: Role
  name: tpt-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tpt-ci-rolebinding
subjects:
  - kind: ServiceAccount
    name: tpt-ci-account
    namespace: "{{ .Values.namespace }}"
roleRef:
  kind: Role
  name: tpt-ci-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  name: tpt-ci-token
  namespace: "{{ .Values.namespace }}"
  annotations:
    kubernetes.io/service-account.name: tpt-ci-account
    kubernetes.io/service-account.namespace: "{{ .Values.namespace }}"
type: kubernetes.io/service-account-token
