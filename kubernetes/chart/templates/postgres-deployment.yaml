apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ft-db
  namespace: {{ .Values.namespace }}
  annotations:
    secrets.infisical.com/auto-reload: "true"
spec:
  serviceName: ft-db
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ft-db
  template:
    metadata:
      labels:
        app: ft-db
        version: v1
        release: {{ .Release.Name }}
    spec:
      nodeSelector:
        kubernetes.io/hostname: veronica
      serviceAccountName: ft-service-account
      terminationGracePeriodSeconds: 60
      volumes:
        - name: postgres-queries
          configMap:
            name: postgres-exporter-queries
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ft-secrets
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)"]
            initialDelaySeconds: 30
            periodSeconds: 15
          command:
            - "sh"
            - "-c"
            - |
              mkdir -p /var/lib/postgresql/data/pgdata
              if [ ! -f /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
                /usr/local/bin/docker-entrypoint.sh postgres
              else
                PG_VERSION=$(cat /var/lib/postgresql/data/pgdata/PG_VERSION)
                if [ "$PG_VERSION" != "17" ]; then
                  echo "Upgrading PostgreSQL from $PG_VERSION to 17"
                  pg_upgrade -b /usr/lib/postgresql/$PG_VERSION/bin -B /usr/lib/postgresql/17/bin -d /var/lib/postgresql/data/pgdata -D /var/lib/postgresql/data/pgdata_new
                  mv /var/lib/postgresql/data/pgdata /var/lib/postgresql/data/pgdata_old
                  mv /var/lib/postgresql/data/pgdata_new /var/lib/postgresql/data/pgdata
                  rm -rf /var/lib/postgresql/data/pgdata_old
                fi
                /usr/local/bin/docker-entrypoint.sh postgres
              fi
        - name: postgres-exporter
          image: prometheuscommunity/postgres-exporter:v0.17.1
          ports:
            - containerPort: 9187
              name: metrics
          env:
            - name: DATA_SOURCE_NAME
              value: "postgresql://postgres:$(POSTGRES_PASSWORD)@localhost:5432/ft?sslmode=disable"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ft-secrets
                  key: POSTGRES_PASSWORD
            - name: PG_EXPORTER_CONSTANT_LABELS
              value: "release={{ .Release.Name }},namespace={{ .Release.Namespace }}"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          helm.sh/resource-policy: keep
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.postgres.storageClass | default "longhorn-default" }}
        resources:
          requests:
            storage: {{ .Values.postgres.storage | default "3Gi" }}
