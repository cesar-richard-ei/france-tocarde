apiVersion: apps/v1
kind: Deployment
metadata:
  name: tpt-frontend
  namespace: {{ .Release.Namespace }}
  annotations:
    secrets.infisical.com/auto-reload: "true"
spec:
  replicas: {{ .Values.frontend.replicas | int }}
  selector:
    matchLabels:
      app: tpt-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: tpt-frontend
        version: v1
        security.istio.io/tlsMode: istio
        security.istio.io/injection: enabled
      annotations:
        security.istio.io/enableStrictMTLS: "true"
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      serviceAccountName: tpt-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx user
        fsGroup: 101    # nginx group
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          volumeMounts:
            - name: nginx-run
              mountPath: /run/nginx
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: nginx-main-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx-main.conf
            - name: ssl-certs
              mountPath: /etc/nginx/ssl
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: {{ .Values.frontend.resources.requests.cpu | default "50m" }}
              memory: {{ .Values.frontend.resources.requests.memory | default "64Mi" }}
            limits:
              cpu: {{ .Values.frontend.resources.limits.cpu | default "100m" }}
              memory: {{ .Values.frontend.resources.limits.memory | default "128Mi" }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: nginx-run
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: frontend-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-main-config
          configMap:
            name: frontend-nginx-config
            items:
              - key: nginx-main.conf
                path: nginx-main.conf
        - name: ssl-certs
          secret:
            secretName: tpt-ssl-copy
