apiVersion: batch/v1
kind: Job
metadata:
  name: copy-ssl-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    spec:
      serviceAccountName: tpt-service-account
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Vérifier si le secret existe déjà
          if kubectl get secret tpt-ssl-copy -n {{ .Release.Namespace }} >/dev/null 2>&1; then
            echo "Le secret tpt-ssl-copy existe déjà, mise à jour..."
            # Supprimer pour recréer à jour
            kubectl delete secret tpt-ssl-copy -n {{ .Release.Namespace }}
          fi
          
          # Extraire les données du secret source
          TLS_CRT=$(kubectl get secret tpt-tls -n istio-system -o jsonpath='{.data.tls\.crt}')
          TLS_KEY=$(kubectl get secret tpt-tls -n istio-system -o jsonpath='{.data.tls\.key}')
          
          # Créer le nouveau secret dans le namespace cible
          kubectl create secret generic tpt-ssl-copy -n {{ .Release.Namespace }} \
            --from-literal=tls.crt="$TLS_CRT" \
            --from-literal=tls.key="$TLS_KEY" \
            --from-literal=data.crt="$TLS_CRT" \
            --from-literal=data.key="$TLS_KEY" \
            --type=kubernetes.io/tls
      restartPolicy: OnFailure
  backoffLimit: 3 